{"ast":null,"code":"var _jsxFileName = \"/Users/diana/Desktop/todo-app-master/client/src/App.js\";\nimport React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport { Checkbox, Button } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Tasks {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App flex\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: \"What Should We Do Today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"flex\",\n          style: {\n            margin: \"15px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            style: {\n              width: \"50%\"\n            },\n            value: this.state.currentTask,\n            required: true,\n            onChange: this.handleChange,\n            placeholder: \"Add New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              height: \"40px\"\n            },\n            \"text-font\": \"100px\",\n            variant: \"outlined\",\n            type: \"submit\",\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Paper, {\n            className: \"flex task_container\",\n            style: {\n              width: \"80%\"\n            },\n            \"align-self\": \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: task.completed,\n              onClick: () => this.handleUpdate(task._id),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: task.completed ? \"task line_through\" : \"task\",\n              children: task.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.handleDelete(task._id),\n              color: \"secondary\",\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Tasks","Paper","TextField","Checkbox","Button","App","state","tasks","currentTask","render","handleSubmit","margin","width","handleChange","height","map","task","completed","handleUpdate","_id","handleDelete"],"sources":["/Users/diana/Desktop/todo-app-master/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport { Checkbox, Button } from \"@material-ui/core\";\nimport \"./App.css\";\n\nclass App extends Tasks {\n  state = { tasks: [], currentTask: \"\" };\n  render() {\n    const { tasks } = this.state;\n    return (\n      <div className=\"App flex\">\n        <Paper elevation={3} className=\"container\">\n          <div className=\"heading\">What Should We Do Today?</div>\n          <form\n            onSubmit={this.handleSubmit}\n            className=\"flex\"\n            style={{ margin: \"15px 0\" }}\n          >\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              style={{ width: \"50%\" }}\n              value={this.state.currentTask}\n              required={true}\n              onChange={this.handleChange}\n              placeholder=\"Add New Task\"\n            />\n            <Button\n              style={{ height: \"40px\" }}\n              text-font=\"100px\"\n              variant=\"outlined\"\n              type=\"submit\"\n            >\n              Add task\n            </Button>\n          </form>\n          <div>\n            {tasks.map((task) => (\n              <Paper\n                key={task._id}\n                className=\"flex task_container\"\n                style={{ width: \"80%\" }}\n                align-self=\"center\"\n              >\n                <Checkbox\n                  checked={task.completed}\n                  onClick={() => this.handleUpdate(task._id)}\n                  color=\"primary\"\n                />\n                <div className={task.completed ? \"task line_through\" : \"task\"}>\n                  {task.task}\n                </div>\n                <Button\n                  onClick={() => this.handleDelete(task._id)}\n                  color=\"secondary\"\n                >\n                  delete\n                </Button>\n              </Paper>\n            ))}\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,mBAAjC;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBL,KAAlB,CAAwB;EAAA;IAAA;IAAA,KACtBM,KADsB,GACd;MAAEC,KAAK,EAAE,EAAT;MAAaC,WAAW,EAAE;IAA1B,CADc;EAAA;;EAEtBC,MAAM,GAAG;IACP,MAAM;MAAEF;IAAF,IAAY,KAAKD,KAAvB;IACA,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,KAAD;QAAO,SAAS,EAAE,CAAlB;QAAqB,SAAS,EAAC,WAA/B;QAAA,wBACE;UAAK,SAAS,EAAC,SAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,QAAQ,EAAE,KAAKI,YADjB;UAEE,SAAS,EAAC,MAFZ;UAGE,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAV,CAHT;UAAA,wBAKE,QAAC,SAAD;YACE,OAAO,EAAC,UADV;YAEE,IAAI,EAAC,OAFP;YAGE,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAT,CAHT;YAIE,KAAK,EAAE,KAAKN,KAAL,CAAWE,WAJpB;YAKE,QAAQ,EAAE,IALZ;YAME,QAAQ,EAAE,KAAKK,YANjB;YAOE,WAAW,EAAC;UAPd;YAAA;YAAA;YAAA;UAAA,QALF,eAcE,QAAC,MAAD;YACE,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAV,CADT;YAEE,aAAU,OAFZ;YAGE,OAAO,EAAC,UAHV;YAIE,IAAI,EAAC,QAJP;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAdF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAyBE;UAAA,UACGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACT,QAAC,KAAD;YAEE,SAAS,EAAC,qBAFZ;YAGE,KAAK,EAAE;cAAEJ,KAAK,EAAE;YAAT,CAHT;YAIE,cAAW,QAJb;YAAA,wBAME,QAAC,QAAD;cACE,OAAO,EAAEI,IAAI,CAACC,SADhB;cAEE,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkBF,IAAI,CAACG,GAAvB,CAFjB;cAGE,KAAK,EAAC;YAHR;cAAA;cAAA;cAAA;YAAA,QANF,eAWE;cAAK,SAAS,EAAEH,IAAI,CAACC,SAAL,GAAiB,mBAAjB,GAAuC,MAAvD;cAAA,UACGD,IAAI,CAACA;YADR;cAAA;cAAA;cAAA;YAAA,QAXF,eAcE,QAAC,MAAD;cACE,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBJ,IAAI,CAACG,GAAvB,CADjB;cAEE,KAAK,EAAC,WAFR;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAdF;UAAA,GACOH,IAAI,CAACG,GADZ;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QAzBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAuDD;;AA3DqB;;AA8DxB,eAAed,GAAf"},"metadata":{},"sourceType":"module"}